{"version":3,"sources":["assets/img/timer.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/Button/index.js","components/resources/DashboardView/TimerCard/index.js","views/DashboardView/index.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Button","children","variant","isDisabled","onClick","className","type","disabled","defaultProps","status","FOCUS","LONG_BREAK","SHORT_BREAK","TimerCard","time","onStart","onStop","state","timer","isActive","String","Math","floor","padStart","getSecond","getTimer","DashboardView","useState","setTimer","timerState","setTimerState","iteration","setIteration","setIsActive","useEffect","currentIteration","interval","setInterval","clearInterval","src","timerImage","alt"],"mappings":"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","file":"static/js/3.9be5aaf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timer.9c24de3e.svg\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ children, variant, isDisabled, onClick, className }) => {\n  if (isDisabled)\n    return (\n      <button\n        type=\"button\"\n        disabled\n        className={`bg-blue-500 opacity-75 text-white font-bold py-2 px-4 rounded ${className}`}\n        onClick={onClick}\n      >\n        {children}\n      </button>\n    )\n\n  return (\n    <button\n      type=\"button\"\n      className={`${\n        variant === 'primary'\n          ? 'bg-blue-500 hover:bg-blue-700 text-white font-bold'\n          : 'bg-transparent hover:bg-blue-500 text-white hover:text-white border border-white hover:border-transparent font-semibold'\n      } py-2 px-4 rounded ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  variant: PropTypes.string,\n  className: PropTypes.string,\n  isDisabled: PropTypes.bool\n}\n\nButton.defaultProps = {\n  variant: 'primary',\n  isDisabled: false\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from 'components/common/Button'\n\nconst status = {\n  FOCUS: 'Focus',\n  LONG_BREAK: 'Long Break',\n  SHORT_BREAK: 'Short Break'\n}\n\nconst getMinute = time => {\n  return String(Math.floor(time / 60)).padStart(2, '0')\n}\n\nconst getSecond = time => {\n  return String(time % 60).padStart(2, '0')\n}\n\nconst TimerCard = ({ onStart, onStop, state, timer, isActive }) => {\n  return (\n    <div className=\"flex flex-col p-16 bg-gray-800 border-b\">\n      <div className=\"flex justify-center\">\n        <h1\n          className={`${\n            state === 'LONG_BREAK' || state === 'SHORT_BREAK'\n              ? 'text-green-400'\n              : 'text-red-400'\n          } font-bold text-xl`}\n        >\n          {status[state]}\n        </h1>\n      </div>\n\n      <div className=\"flex justify-center mt-2\">\n        <p className=\"text-white font-bold text-5xl\">\n          {`${getMinute(timer)} : ${getSecond(timer)}`}\n        </p>\n      </div>\n\n      <div className=\"inline-flex justify-center w-auto mt-4\">\n        <Button className=\"mr-5\" onClick={onStart} variant=\"primary\">\n          {isActive ? 'Pause' : 'Start'}\n        </Button>\n\n        <Button onClick={() => onStop(state)} variant=\"secondary\">\n          Stop\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nTimerCard.propTypes = {\n  state: PropTypes.string,\n  timer: PropTypes.number.isRequired,\n  onStart: PropTypes.func,\n  onStop: PropTypes.func,\n  isActive: PropTypes.bool\n}\n\nTimerCard.defaultProps = {\n  state: 'FOCUS',\n  isActive: false\n}\n\nexport default TimerCard\n","import React, { useState, useEffect } from 'react'\n\nimport TimerCard from 'components/resources/DashboardView/TimerCard'\n\nimport timerImage from 'assets/img/timer.svg'\n\nconst getTimer = state => {\n  if (state === 'SHORT_BREAK') return 300\n\n  if (state === 'LONG_BREAK') return 900\n\n  return 1500\n}\n\nconst changeTimerState = currentIteration => {\n  if (currentIteration <= 6) {\n    if (currentIteration % 2 === 0) return 'FOCUS'\n\n    return 'SHORT_BREAK'\n  }\n\n  return 'LONG_BREAK'\n}\n\nconst DashboardView = () => {\n  const [timer, setTimer] = useState(1500)\n  const [timerState, setTimerState] = useState('FOCUS')\n  const [iteration, setIteration] = useState(0)\n  const [isActive, setIsActive] = useState(false)\n\n  const onStartTimer = () => {\n    setIsActive(!isActive)\n    setIteration(iteration + 1)\n  }\n\n  const onStopTimer = state => {\n    setTimer(getTimer(state))\n    setIsActive(false)\n  }\n\n  useEffect(() => {\n    let interval = null\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setTimer(time => time - 1)\n      }, 1000)\n\n      if (timer === 0) {\n        clearInterval(interval)\n        setTimerState(changeTimerState(iteration))\n        setIsActive(false)\n      }\n    } else if (!isActive && timer !== 0) {\n      clearInterval(interval)\n    } else {\n      setTimer(getTimer(timerState))\n    }\n\n    return () => clearInterval(interval)\n  }, [isActive, timer, timerState, iteration])\n\n  return (\n    <>\n      <TimerCard\n        timer={timer}\n        state={timerState}\n        onStart={onStartTimer}\n        onStop={onStopTimer}\n        isActive={isActive}\n      />\n\n      <div className=\"flex flex-col px-6 py-16\">\n        <img\n          className=\"w-56 self-center\"\n          src={timerImage}\n          alt=\"Timer illustration\"\n        />\n        <p className=\"text-2xl text-center font-bold text-gray-800 mt-4\">\n          What is Pomodoro?\n        </p>\n        <div className=\"mt-3 w-40 self-center border-b-2 border-gray-400\" />\n        <p className=\"text-base text-center text-gray-800 mt-6 px-16\">\n          Pomodoro technique is one of the time management technique. This\n          method developed by Francesco Cirillo in late 1980s. This technique\n          uses a timer to break down work into intevals, commonly use 25 minutes\n          in length, separated by short breaks. Each interval is known as a\n          pomodoro, from the italian word from &apos;tomato&apos;, after the\n          tomato-shaped kitchen timer that Cirillo used as a university student.\n        </p>\n      </div>\n    </>\n  )\n}\n\nexport default DashboardView\n"],"sourceRoot":""}